//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using the template for generating Repositories and a Unit of Work for NHibernate model.
// Code is generated on: 10/31/2014 10:07:56 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Diagnostics;
using FluentNHibernate.Cfg;
using FluentNHibernate.Cfg.Db;
using NewsAppModel.Infrastructure;
using NHibernate;

namespace NewsApp.Model
{
    public class NHibernateSessionProvider
    {
        private static ISessionFactory _sessionFactory;

        private NHibernateSessionProvider()
        {
        }

      

        public static ISessionFactory SessionFactory
        {
            get
            {
                if (_sessionFactory == null)
                {
                    _sessionFactory =
                        Fluently.Configure()
                        .Database(MsSqlConfiguration.MsSql2008.ConnectionString(c => c.Is(AppSettings.Instance.ConnectionString)))
                          .Mappings(m => m.FluentMappings.AddFromAssemblyOf<NHibernateSessionProvider>())
                            .BuildSessionFactory();
                }
                return _sessionFactory;
            }
        }

        public static ISession GetSession()
        {
            Debug.Print("Get Session");
            return SessionFactory.OpenSession();
        }
    } 
}