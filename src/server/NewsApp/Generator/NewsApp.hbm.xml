<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="NewsAppModel" namespace="NewsApp.Model" xmlns="urn:nhibernate-mapping-2.2">
  <class name="User" table="Users">
    <id name="UserId" type="Int32">
      <column name="UserId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="Email" type="String">
      <column name="Email" not-null="false" />
    </property>
    <property name="CreateDate" type="DateTime">
      <column name="CreateDate" not-null="true" />
    </property>
    <property name="LastModified" type="DateTime">
      <column name="LastModified" not-null="false" />
    </property>
    <property name="Avatar" type="String">
      <column name="Avatar" not-null="false" />
    </property>
    <property name="Name" type="String">
      <column name="Name" not-null="false" />
    </property>
    <property name="BirthDay" type="Date">
      <column name="BirthDay" not-null="false" />
    </property>
    <property name="FacebookId" type="Int64">
      <column name="FacebookId" not-null="false" />
    </property>
    <property name="IsAnonymous" type="Boolean">
      <column name="IsAnonymous" default="1" not-null="true" />
    </property>
    <many-to-one name="HomeChurch" class="Church" not-found="ignore">
      <column name="ChurchId" not-null="false" precision="10" scale="0" sql-type="int" />
    </many-to-one>
    <bag name="Subscriptions" table="Subscriptions_Users" lazy="true" generic="true">
      <key>
        <column name="UserId" not-null="true" />
      </key>
      <many-to-many class="ChurchSubscription">
        <column name="ChurchSubscriptionId" not-null="true" />
      </many-to-many>
    </bag>
    <bag name="Churches" table="Churches_Users" lazy="true" generic="true">
      <key>
        <column name="UserId" not-null="true" />
      </key>
      <many-to-many class="Church">
        <column name="ChurchId" not-null="true" />
      </many-to-many>
    </bag>
    <bag name="Notifications" inverse="true" generic="true">
      <key>
        <column name="UserId" />
      </key>
      <one-to-many class="UserNotification" />
    </bag>
    <bag name="Comments" inverse="true" generic="true">
      <key>
        <column name="UserId" />
      </key>
      <one-to-many class="Comment" />
    </bag>
    <bag name="CreatedNewsFeeds" inverse="true" generic="true">
      <key>
        <column name="UserId" />
      </key>
      <one-to-many class="NewsFeed" />
    </bag>
    <bag name="Devices" inverse="true" cascade="all-delete-orphan" generic="true">
      <key>
        <column name="UserId" />
      </key>
      <one-to-many class="UserDevice" />
    </bag>
    <bag name="Roles" inverse="true" generic="true">
      <key>
        <column name="UserId" />
      </key>
      <one-to-many class="UserRole" />
    </bag>
    <bag name="LikedNewsFeeds" table="LikedNewsFeeds_Users" schema="dbo" lazy="true" inverse="true" generic="true">
      <key>
        <column name="UserId" />
      </key>
      <many-to-many class="NewsFeed">
        <column name="NewsFeedId" />
      </many-to-many>
    </bag>
  </class>
  <class name="NewsFeed" table="NewsFeeds">
    <id name="NewsFeedId" type="Int32">
      <column name="NewsFeedId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="Body" type="String">
      <column name="Body" not-null="false" />
    </property>
    <property name="Title" type="String">
      <column name="Title" not-null="true" />
    </property>
    <property name="CreateDate" type="DateTime">
      <column name="CreateDate" not-null="true" />
    </property>
    <property name="Type" type="Int32">
      <column name="Type" not-null="false" />
    </property>
    <property name="LikesCount" type="Int64">
      <column name="LikesCount" default="0" not-null="true" />
    </property>
    <property name="Images" type="String">
      <column name="Images" not-null="false" />
    </property>
    <property name="ScheduleDate" type="DateTime">
      <column name="ScheduleDate" not-null="false" />
    </property>
    <property name="IsSent" type="Boolean">
      <column name="IsSent" default="0" not-null="true" />
    </property>
    <property name="NotifyUsers" type="Boolean">
      <column name="NotifyUsers" default="0" not-null="true" />
    </property>
    <property name="IsGlobal" type="Boolean">
      <column name="IsGlobal" not-null="false" />
    </property>
    <property name="CommentsCount" type="Int64">
      <column name="CommentsCount" default="0" not-null="true" />
    </property>
    <many-to-one name="CreatedBy" class="User">
      <column name="UserId" not-null="true" />
    </many-to-one>
    <bag name="Users" table="LikedNewsFeeds_Users" schema="dbo" generic="true">
      <key not-null="true">
        <column name="NewsFeedId" not-null="true" precision="10" scale="0" sql-type="int" />
      </key>
      <many-to-many class="User">
        <column name="UserId" not-null="true" precision="10" scale="0" sql-type="int" />
      </many-to-many>
    </bag>
    <many-to-one name="Chruch" class="Church">
      <column name="ChurchId" not-null="true" />
    </many-to-one>
    <many-to-one name="ChurchSubscription" class="ChurchSubscription">
      <column name="ChurchSubscriptionId" not-null="true" />
    </many-to-one>
    <bag name="Notification" inverse="true" generic="false">
      <key>
        <column name="NewsFeedId" />
      </key>
      <one-to-many class="UserNotification" />
    </bag>
    <bag name="Comments" inverse="true" generic="true">
      <key>
        <column name="NewsFeedId" />
      </key>
      <one-to-many class="Comment" />
    </bag>
  </class>
  <class name="UserNotification" table="UserNotifications">
    <id name="UserNotificationId" type="Int32">
      <column name="UserNotificationId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="LastSeen" type="DateTime">
      <column name="LastSeen" not-null="false" />
    </property>
    <property name="SentDate" type="DateTime">
      <column name="SentDate" not-null="false" />
    </property>
    <many-to-one name="User" class="User">
      <column name="UserId" not-null="true" />
    </many-to-one>
    <many-to-one name="Notification" class="NewsFeed">
      <column name="NewsFeedId" not-null="true" />
    </many-to-one>
  </class>
  <class name="Church" table="Churches">
    <id name="ChurchId" type="Int32">
      <column name="ChurchId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="DisplayName" type="String">
      <column name="DisplayName" not-null="true" />
    </property>
    <property name="Address" type="String">
      <column name="Address" not-null="true" />
    </property>
    <property name="ZipCode" type="String">
      <column name="ZipCode" not-null="true" />
    </property>
    <property name="State" type="String">
      <column name="State" not-null="true" />
    </property>
    <property name="City" type="String">
      <column name="City" not-null="true" />
    </property>
    <property name="Country" type="String">
      <column name="Country" default="'US'" not-null="true" />
    </property>
    <property name="Latitude" type="Int64">
      <column name="Latitude" not-null="false" />
    </property>
    <property name="Longitude" type="Int64">
      <column name="Longitude" not-null="false" />
    </property>
    <property name="LiveStremUrl" type="String">
      <column name="LiveStremUrl" not-null="false" />
    </property>
    <bag name="HomeUsers" inverse="true" cascade="save-update" generic="true">
      <key>
        <column name="ChurchId" />
      </key>
      <one-to-many class="User" not-found="ignore" />
    </bag>
    <bag name="Users" table="Churches_Users" inverse="true" generic="true">
      <key>
        <column name="ChurchId" />
      </key>
      <many-to-many class="User">
        <column name="UserId" />
      </many-to-many>
    </bag>
    <bag name="Feeds" inverse="true" generic="true">
      <key>
        <column name="ChurchId" />
      </key>
      <one-to-many class="NewsFeed" />
    </bag>
    <bag name="ChurchSubscriptions" inverse="true" cascade="all-delete-orphan" generic="true">
      <key>
        <column name="ChurchId" />
      </key>
      <one-to-many class="ChurchSubscription" />
    </bag>
  </class>
  <class name="Comment" table="Comments">
    <id name="CommentId" type="Int32">
      <column name="CommentId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="Body" type="String">
      <column name="Body" not-null="false" />
    </property>
    <property name="CreateDate" type="DateTime">
      <column name="CreateDate" not-null="true" />
    </property>
    <property name="Images" type="String">
      <column name="Images" not-null="false" />
    </property>
    <many-to-one name="User" class="User">
      <column name="UserId" not-null="true" />
    </many-to-one>
    <many-to-one name="NewsFeed" class="NewsFeed">
      <column name="NewsFeedId" not-null="true" />
    </many-to-one>
  </class>
  <class name="UserDevice" table="UserDevices">
    <id name="UserDeviceId" type="String">
      <column name="UserDeviceId" not-null="true" />
      <generator class="assigned" />
    </id>
    <property name="Type" type="String">
      <column name="Type" not-null="true" />
    </property>
    <property name="LastLogin" type="DateTime">
      <column name="LastLogin" not-null="true" />
    </property>
    <many-to-one name="User" class="User" cascade="all">
      <column name="UserId" not-null="true" />
    </many-to-one>
  </class>
  <class name="ChurchSubscription" table="ChurchSubscriptions">
    <id name="ChurchSubscriptionId" type="Int32">
      <column name="ChurchSubscriptionId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="Name" type="String">
      <column name="Name" not-null="true" />
    </property>
    <property name="IsEvent" type="Boolean">
      <column name="IsEvent" not-null="true" />
    </property>
    <many-to-one name="Church" class="Church">
      <column name="ChurchId" not-null="true" />
    </many-to-one>
    <bag name="Users" table="Subscriptions_Users" lazy="true" inverse="true" generic="true">
      <key>
        <column name="ChurchSubscriptionId" />
      </key>
      <many-to-many class="User">
        <column name="UserId" />
      </many-to-many>
    </bag>
    <bag name="NewsFeeds" inverse="true" generic="true">
      <key>
        <column name="ChurchSubscriptionId" />
      </key>
      <one-to-many class="NewsFeed" />
    </bag>
  </class>
  <class name="UserRole" table="UserRoles">
    <id name="UserRoleId" type="Int32">
      <column name="UserRoleId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="CanPost" type="Boolean">
      <column name="CanPost" not-null="true" />
    </property>
    <many-to-one name="User" class="User">
      <column name="UserId" not-null="true" />
    </many-to-one>
  </class>
  <class name="UserLog" table="UserLogs">
    <id name="UserLogId" type="Int32">
      <column name="UserLogId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="LogTime" type="DateTime">
      <column name="LogTime" not-null="true" />
    </property>
    <property name="LogType" type="NewsApp.Model.LogType, NewsAppModel">
      <column name="LogType" not-null="true" />
    </property>
    <many-to-one name="User" class="User">
      <column name="UserId" not-null="true" />
    </many-to-one>
    <many-to-one name="NewsFeed" class="NewsFeed">
      <column name="NewsFeedId" not-null="true" />
    </many-to-one>
  </class>
  <class name="FeedBack" table="FeedBacks">
    <id name="FeedBackId" type="Int32">
      <column name="FeedBackId" not-null="true" />
      <generator class="identity" />
    </id>
    <property name="Body" type="String">
      <column name="Body" not-null="true" />
    </property>
    <property name="CreateDate" type="DateTime">
      <column name="CreateDate" not-null="true" />
    </property>
    <many-to-one name="User" class="User">
      <column name="UserId" not-null="true" />
    </many-to-one>
  </class>
</hibernate-mapping>